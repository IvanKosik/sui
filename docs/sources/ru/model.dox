/*! \page ui_model_main_page Семантическая модель пользовательских интерфейсов
 * \section ui_model_intro_section Введение
В основу семантической модели пользовательских интерфейсов интеллектуальных систем положены следующие принципы:
\li пользовательский интерфейс рассматривается как специализированная интеллектуальная система, которая выполняет задачу взаимодействия с пользователем. Как и любая другая интеллектуальная система, она состоит из базы знаний и машины обработки знаний;
\li в основе графических интерфейсов лежит SCg-код (<b>Semantic Code graphical</b> – который является одним из возможных способов визуального представления SC-кода). Объекты, отображаемые на экране с помощью SCg-кода, называются sc.g-элементами. Основной идеей при визуализации является то, что все изображенные на экране объекты, в том числе и элементы управления, являются элементами семантической сети. Другими словами каждому изображенному на экране объекту соответствует sc-элемент в базе знаний.
\image html model/control_example.png "Пример информационной конструкции, визуализированной с помощью SCg-кода. 1 - элементы управления, 2 - узлы и дуги семантической сети"
\image latex model/control_example.png "Пример информационной конструкции, визуализированной с помощью SCg-кода. 1 - элементы управления, 2 - узлы и дуги семантической сети"
Это дает возможность явной визуализации связей между объектами. К примеру, отображение отношения декомпозиции, для пунктов меню, или же явная визуализация отношения <b>дочернее окно*</b>:
\image html model/child_window_show_rel_example.png "Пример явной визуализации отношения дочернее окно*"
\image latex model/child_window_show_rel_example.png "Пример явной визуализации отношения дочернее окно*"
\li выделение семантики в пользовательских действиях. Другими словами, построение четкой типологии пользовательских действий и явное обращение пользователя к их семантике, при работе с системой.

 * \section ui_model_graphical_ui Графический пользовательский интерфейс
Пользовательский интерфейс представляет собой мультимодальный оконный интерфейс. Взаимодействие пользователя с системой осуществляется в рамках главного окна. 
<b>Главное окно</b> – ограниченная, прямоугольная, скроллируемая область экрана. В рамках главного окна могут присутствовать другие окна. В основе графического пользовательского интерфейса лежит \link ui_model_scg_page SCg-код \endlink. Другими словами, в рамках главного окна пользователь работает с помощью SCg-кода. Вся информация, отображаемая пользователю, представляется c его помощью. Это не исключает других способов представления информации, но каждая такая инородная информационная конструкция трактуется как содержимое соответствующей sc.g-рамки.
\image html model/scg_border_example.png "Пример отображения sc.g-рамки"
\image latex model/scg_border_example.png "Пример отображения sc.g-рамки"
 * В виде sc.g-конструкций оформляются сообщения пользователя, адресуемые интеллектуальной системе, а также сообщения системы, адресуемые пользователю. Частным видом таких сообщений являются сообщения, состоящие из одной sc.g-рамки, отображающей некоторое содержимое sc-ссылки.
 * При работе с системой по средствам SCg-кода пользователь имеет несколько вариантов формирования команды системе (в частности вопроса). В первую очередь команда может быть явно сформулирована с помощью средств редактирования sc.g-конструкций (используя редактор sc.g-конструкций, пользователь явно рисует команду (вопрос) на языке команд (вопросов)). Наиболее часто используемые команды или же классы команд, могут присутствовать на экране в виде элементов управления. Тогда пользователю лишь необходимо указать аргументы команды и инициировать её.
 * Элементы управления представляют собой sc.g-узлы, имеющих заранее известную операционную семантику, и отображаемых в соответствии с ней. Выделяются следующие типы знаков, которые относятся к элементам управления:
<ul>
<li> знаки неатомарных классов пользовательских интерфейсных команд (всегда отображаются в составе меню команд). Знаки команд, при нажатии на которые отображается их разбиение на множество других команд (открытие пункта меню и отображение его подпунктов); </li>
<li> знаки атомарных классов пользовательских интерфейсных команд, которые могут отображаться в составе меню и отдельно (являются наиболее часто используемыми командами). При отображении в составе меню, они появляются на экране при нажатии на знак обозначающий команду, которая относиться к классу неатомарных пользовательских команд. В свою очередь класс атомарных команд делится на подклассы:</li>
<ul>
<li> команда-вопрос – команд, которая инициирует вопрос системе; </li>
<li> команда редактирования – команда, которая инициирует операцию редактирования информационной конструкции (создание или удаление объектов, изменение типа объектов и т. д.); </li>
<li> команда просмотра – команда, которая инициирует действия связанные с просмотром информационных конструкций (навигация, масштабирование и т. д.). </li>
</ul>
<li> элементы управления изображающие <b>объект действий</b>. Они используются для отображения sc-узлов в рамках главного окна, над которыми можно производить действия. Такой класс элементов управления нужен, чтобы обеспечить более удобный диалог пользователя с системой. Рассмотрим пример: 
Пользователь запускает систему по планиметрии. Для того, чтобы начать работать с системой ему надо сформулировать вопрос, а это сложно не зная основных понятий. Поэтому он может раскрыть неатомарный пункт меню, который содержит в себе список понятий, этот список понятий отображается с помощью класса команд <b>"объект действий"</b> </li>
<li>знаки конкретных пользовательских команд, которые уже точно связаны с объектами, над которыми производится действие. Примером является кнопка закрытия окна, в состав которого она входит.</li>
</ul>
 *
 * Использование такого подхода, когда изображаемые на экране элементы управления представляют собой знаки узлов семантической сети, дает пользователю возможность указывать в качестве аргументов к командам и сами команды. Другими словами пользователь может задавать вопросы системе не только в рамках предметной области, но и касающиеся её пользовательского интерфейса. Это значительно снижает минимальные требования, предъявляемые к начальной квалификации пользователя. Так на начальном этапе пользователю достаточно лишь показать, каким образом можно формировать вопросы и он сможет самостоятельно, общаясь лишь с системой, научиться пользоваться ей. Это все благодаря тому, что у него есть возможность узнать у системы необходимую информацию о том или ином элементе управления. К примеру, он может попросить систему показать пример использования той или иной команды или же спросить какие есть различие между двумя указанными командами и т. д.

 * \subsection ui_model_graphical_ui_command Представление команд в базе знаний и их визуализация
 * Так как все элементы управления - это знаки узлов семантической сети, то они представлены в базе знаний. Каждый тип элементов управления имеет свой способ представления в базе знаний.
	Знаки изображающие любой класс команд могут отображаться следующими способами:
	<ul>
		<li>в виде прямоугольника, в который вписан текстовый идентификатор команды;</li>
		<li>в виде прямоугольника с закругленными краями, в который вписан текстовый идентификатор команды;</li>
		<li>в виде овала, в который вписан идентификатор команды;</li>
	</ul>
	При необходимости изображение знака может варьироваться, но при этом оно должно соответствовать следующим требованиям:
	<ul>
		<li>необходимо присутствие текстового или графического идентификатора команды. Идентификатор должен находиться внутри фигуры, котороая изображает знак команды;</li>
		<li>в изображении знака команды должен присутствовать символ, который даёт возможность пользователю определить принадлежность команды к тому или иному классу. Рекомендуется использовать следующие символы:
		<table width="500px" bgcolor="#FFF" class="doc">
			<tr>
				<th>Класс команды</th>
				<th>Описание используемого символа</th>
			</tr>
			<tr>
				<td>класс неатомарных команд</td>
				<td>изображение равнобедренного треугольника, основание которого находиться вверху</td>
			</tr>
			<tr>
				<td>класс команд-вопросов</td>
				<td>изображение символа "?"</td>
			</tr>
			<tr>
				<td>класс команд редактирования</td>
				<td>изображение карандаша (ручки и т. д.)</td>
			</tr>
			<tr>
				<td>класс команд просмотра</td>
				<td>изображение напоминающее глаз</td>
			</tr>
		</table>
	<div class="info">Приведенные в таблице описания не вяляются обязательными, а лишь носят рекомендательный характер. Основная задача заключается в том, чтобы пользователь мог легко ассоциировать изображение с классом команды.</div>
	</li>
	</ul>
 * \subsubsection ui_model_graphical_ui_command_noatom Неатомарные команды
	В виде знаков <b> неатомарных команд </b> изображаются sc-узлы, которые входят во множество "неатомарных команд" (ui_noatom_command). К примеру, на изображении ниже приведена часть базы знаний, описывающая неаторманую команду "главное меню" (ui_main_window). Знак данной команды с помощью отношения <i>декомпозиция*</i> (decomposition*) связывается со знаком множества команд, которые будут выведены на экран при инициировании данной команды. 
	<b>Операционная семантика: </b> при инициировании (к примеру, по нажатию левой клавиши мыши) данной команды, в рамках главного окна будут выведены знаки команд <b><i>ui_na_view_kb</i></b> и <b><i>ui_na_kb_edit</i></b>. Это эквивалентно запросу "вывести декомпозицию указанного объекта".
	\image html model/ui_na_command_example.png "Пример представления неатомарной команды в базе знаний"
	\image html model/ui_na_command_view_example.png "Пример отображения знака неатомарной команды"
	
 * \subsubsection ui_model_graphical_ui_command_atom Атомарные команды
	В виде знаков <b> атомарных команд </b> изображаются sc-узлы, которые входят во множество "атомарных команд" (ui_atom_command). К примеру, на изображении ниже приведена часть базы знаний, описывающая атомарную команду "поиск идентификаторов" (ui_acmd_search_identifiers). 
	\image html model/ui_a_command_example.png "Пример представления атомарной команды в базе знаний"
	В данном примере явно не указанно, к какому классу относиться данная команда, поэтому её операционная семантика не ясна. Для того, чтобы явно указать к какому классу команд она относиться, необходимо включить её во множество соответсвующее классу. К примеру, команда-вопрос задается следующим образом:
	\image html ui_a_command_question_example.png "Пример указания класса команды-вопроса"
	Ниже представлена таблица, в которой указаны идентификаторы ключевых sc-узлов обозначающих множества классов атомарных команд. Также представлены требования предъявляемые к визуальному знаку каждого класса атомарной команды и пример отображения.
	<center>
	<table width="700px" bgcolor="#FFF" class="doc">
		<tr>
			<th>Класс атомарной команды</th>
			<th>Идентификатор sc-узла обозначающего множество команд данного класса</th>
			<th>Пример изображаемого знака</th>
		</tr>
		<tr>
			<td>команда-вопрос</td>
			<td>ui_command_question</td>
			<td>
				\image html ui_a_question_command_view_example.png
			</td>
		</tr>
		<tr>
			<td>команда редактирования</td>
			<td>ui_command_edit</td>
			<td>
				\image html ui_a_edit_command_view_example.png
			</td>
		</tr>
		<tr>
			<td>команда просмотра</td>
			<td>ui_command_view</td>
			<td>
				\image html ui_a_view_command_view_example.png
			</td>
		</tr>
	</table>
	</center>

 * \paragraph ui_model_graphical_ui_command_atom_question Класс команд-вопросов

Описание представления команды-вопроса в базе знаний

 * \paragraph ui_model_graphical_ui_command_atom_edit Класс команд редактирования
 * \paragraph ui_model_graphical_ui_command_atom_view Класс команд просмтотра


 * \subsubsection ui_model_graphical_ui_command_atom_x Атомарные команды с уже известными аргументами


 * \subsection ui_model_graphical_ui_initiate_command Инициирование команд пользователем

 */
